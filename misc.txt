<Sk id = "sk" className = "province"onMouseEnter={() => {this.setState({selectedIndex:1})}}
                       />
                    <Mn id = "mn" className = "province"onMouseEnter={() => {this.setState({selectedIndex:2})}}
                        />
                    <On id = "on" className = "province"onMouseEnter={() => {this.setState({selectedIndex:3})}}
                        />
                    <Qu id = "qu" className = "province"onMouseEnter={() => {this.setState({selectedIndex:4})}}
                        />
                    <Nb id = "nb" className = "province"onMouseEnter={() => {this.setState({selectedIndex:5})}}
                        />
                    <Ns id = "ns" className = "province"onMouseEnter={() => {this.setState({selectedIndex:6})}}
                        />
                    <Nl id = "nl" className = "province"onMouseEnter={() => {this.setState({selectedIndex:7})}}
                        />
                    <Pei id = "pei" className = "province"onMouseEnter={() => {this.setState({selectedIndex:8})}}
                       />
                    <Bc id = "bc" className = "province"onMouseEnter={() => {this.setState({selectedIndex:9})}}
                        />
                    <Nu id = "nu" className = "province"onMouseEnter={() => {this.setState({selectedIndex:10})}}
                       />
                    <Yk id = "yk" className = "province"onMouseEnter={() => {this.setState({selectedIndex:11})}}
                        />
                    <Nwt id = "nwt" className = "province"onMouseEnter={() => {this.setState({selectedIndex:12})}}
                        />
                        
                        
                        
import {ReactComponent as Nwt} from '../icons2/province_outlines/northwest_terretories.svg'
import {ReactComponent as Yk} from '../icons2/province_outlines/yukon.svg'
import {ReactComponent as Nu} from '../icons2/province_outlines/nunavut.svg'
import {ReactComponent as Bc} from '../icons2/province_outlines/british_columbia.svg'
//import sk from '../icons/saskatchewan.svg'
import {ReactComponent as Sk} from '../icons2/province_outlines/saskatchewan.svg'

import {ReactComponent as Mn} from '../icons2/province_outlines/manitoba.svg'
import {ReactComponent as On} from '../icons2/province_outlines/ontario.svg'
import {ReactComponent as Qu} from '../icons2/province_outlines/quebec.svg'
import {ReactComponent as Nb} from '../icons2/province_outlines/new_brunswick.svg'
import {ReactComponent as Ns} from '../icons2/province_outlines/nova_scotia.svg'
import {ReactComponent as Nl} from '../icons2/province_outlines/newfoundland_labrador.svg'
import {ReactComponent as Pei} from '../icons2/province_outlines/prince_edward_island.svg'
import {ReactComponent as Ab} from '../icons2/province_outlines/alberta.svg'       


import Nwt from '../icons2/province_outlines/northwest_terretories.svg'
import Yk from '../icons2/province_outlines/yukon.svg'
import Nu from '../icons2/province_outlines/nunavut.svg'
import Bc from '../icons2/province_outlines/british_columbia.svg'
//import sk from '../icons/saskatchewan.svg'
import Sk from '../icons2/province_outlines/saskatchewan.svg'

import Mn from '../icons2/province_outlines/manitoba.svg'
import On from '../icons2/province_outlines/ontario.svg'
import Qu from '../icons2/province_outlines/quebec.svg'
import Nb from '../icons2/province_outlines/new_brunswick.svg'
import Ns from '../icons2/province_outlines/nova_scotia.svg'
import Nl from '../icons2/province_outlines/newfoundland_labrador.svg'
import Pei from '../icons2/province_outlines/prince_edward_island.svg'
import Ab from '../icons2/province_outlines/alberta.svg'



import React from "react";
import "./style.css";
import {ReactComponent as Nwt} from '../icons2/province_outlines/northwest_terretories.svg'
import {ReactComponent as Yk} from '../icons2/province_outlines/yukon.svg'
import {ReactComponent as Nu} from '../icons2/province_outlines/nunavut.svg'
import {ReactComponent as Bc} from '../icons2/province_outlines/british_columbia.svg'
//import sk from '../icons/saskatchewan.svg'
import {ReactComponent as Sk} from '../icons2/province_outlines/saskatchewan.svg'

import {ReactComponent as Mn} from '../icons2/province_outlines/manitoba.svg'
import {ReactComponent as On} from '../icons2/province_outlines/ontario.svg'
import {ReactComponent as Qu} from '../icons2/province_outlines/quebec.svg'
import {ReactComponent as Nb} from '../icons2/province_outlines/new_brunswick.svg'
import {ReactComponent as Ns} from '../icons2/province_outlines/nova_scotia.svg'
import {ReactComponent as Nl} from '../icons2/province_outlines/newfoundland_labrador.svg'
import {ReactComponent as Pei} from '../icons2/province_outlines/prince_edward_island.svg'
import {ReactComponent as Ab} from '../icons2/province_outlines/alberta.svg'  

import { MapContainer, TileLayer,Marker, Popup   } from 'react-leaflet'
//import AmenitiesSearcher from "../amenities/Amenities"
//import {ReactComponent as Alberta} from '../icons/north_west_terretories.svg';

import ab_flag from '../icons2/flags/ab.png';
import sk_flag from "../icons2/flags/sk.png";
import mn_flag from "../icons2/flags/mb.png";
import on_flag from "../icons2/flags/on.png";
import qu_flag from "../icons2/flags/qu.png";
import nb_flag from "../icons2/flags/nb.png";
import ns_flag from "../icons2/flags/ns.png";
import nl_flag from "../icons2/flags/newfl.png";
import yu_flag from "../icons2/flags/yk.png";
import nu_flag from "../icons2/flags/nu.png";
import nwt_flag from "../icons2/flags/nwt.png";
import pei_flag from "../icons2/flags/pei.png";
import bc_flag from "../icons2/flags/bc.png";


import popu from "../icons2/misc/pop.png";

import houses from "../icons2/misc/houses.png";
import stores from "../icons2/misc/stores.png";
import jobs from "../icons2/misc/jobs.png";
import schools from "../icons2/misc/schools.png";
import comsups from "../icons2/misc/comsups.png";
import cities from "../icons2/misc/cities.png";
import favs from "../icons2/misc/fav.png";

import fs from "../icons2/misc/fullScreen.png";
import ufs from "../icons2/misc/unfullScreen.png";
import down from "../icons2/misc/down.png";
import up from "../icons2/misc/up.png";
import tax from "../icons2/misc/tax.png";
import acct from "../icons2/misc/account.png";


class InteractiveMap extends React.Component{
   
    constructor(props){
        super(props);
        this.socket = props.socket
        this.state = {
            selectedIndex:-1,
            provincialInfo: [{name:"alberta", pop:4371000, flag: ab_flag,cities:[{name: "calgary", long: 51.049999, lat: -114.066666}],tax:5},{name:"saskatchewan", pop: 1174000, flag: sk_flag,cities:[{name: "moose jaw", long: 50.393333, lat:  -105.551941}],tax: 11},{name:"manitoba", pop: 1369000, flag: mn_flag,cities:[{name: "winnipeg", long: 49.895077, lat: -97.138451}],tax: 12},{name:"ontario", pop: 14570000, flag: on_flag,cities:[{name: "ottawa", long:  45.424721, lat: -75.695000}],tax: 13},{name:"quebec", pop: 8485000, flag: qu_flag,cities:[{name: "quebec city", long: 46.829853, lat: -71.254028}],tax: 14.975},{name:"new brunswick", pop: 776827, flag: nb_flag,cities:[{name: "calgary", long: 51.0447, lat: 114.0719}],tax: 15},{name:"nova scotia", pop: 971395, flag: ns_flag,cities:[{name: "calgary", long: 51.0447, lat: 114.0719}],tax: 15},{name:"newfoundland & labrador", pop: 521542, flag: nl_flag,cities:[{name: "calgary", long: 51.0447, lat: 114.0719}],tax: 15},{name:"prince edward island", pop: 156947, flag: pei_flag,cities:[{name: "calgary", long: 51.0447, lat: 114.0719}],tax: 15},{name:"british columbia", pop: 5071000, flag: bc_flag,cities:[{name: "calgary", long: 51.0447, lat: 114.0719}],tax: 12},{name:"nunavut", pop: 38780, flag: nu_flag,cities:[{name: "calgary", long: 51.0447, lat: 114.0719}],tax: 5},{name:"yukon", pop: 40232, flag: yu_flag,cities:[{name: "calgary", long: 51.0447, lat: 114.0719}],tax: 5},{name:"northwest territories", pop: 44826, flag: nwt_flag,cities:[{name: "calgary", long: 51.0447, lat: 114.0719}],tax: 5}],
            selectedMenuIcon:-1,
            isMapFullScreen:false,
            isMapMenuExpanded:false,
            mapSideIcons: [houses,stores,jobs,schools,comsups,cities,favs],
            mapProvinceSelected: [Ab,Sk,Mn,On,Qu,Nb,Ns,Nl,Pei,Bc,Nu,Yk,Nwt],
            sideIcons: ['houses','stores','jobs','schools','community supports','cities', 'favorites'],
            hasAccount:false,
            currentMenuHover:-1,
            changeMenu:true,
            canadaOrmap:true
            
        }
        
    }
    changeMenu = (e,next) =>{
        //console.log(next);
        if (next== this.state.selectedMenuIcon){
             this.setState({changeMenu:true});
             this.setState({selectedMenuIcon:-1});
        }else{
             this.setState({selectedMenuIcon:next});
        }
       
        
        
    }
    getString = (Obj) =>{
        return Object.keys(Obj)[0]
    }
     
    render(){
        return (
            <div className = "interactive-map-container">
                {this.state.canadaOrmap? 
                     <div className = "canada-map-container">
                 <Ab id = "ab" className = {this.state.selectedIndex == 0 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:0})}}
                      title = "alberta" />
                <Sk id = "sk" className = {this.state.selectedIndex == 1 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:1})}}
                       title = "saskatchewan"/>
                    <Mn id = "mn" className = {this.state.selectedIndex == 2 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:2})}}
                       title = "manitoba" />
                    <On id = "on" className = {this.state.selectedIndex == 3 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:3})}}
                        title = "ontario" />
                    <Qu id = "qu" className = {this.state.selectedIndex == 4 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:4})}}
                        title = "quebec" />
                    <Nb id = "nb" className = {this.state.selectedIndex == 5 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:5})}}
                        title = "new brunswick" />
                    <Ns id = "ns" className = {this.state.selectedIndex == 6 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:6})}}
                       title = "nova scotia" />
                    <Nl id = "nl" className = {this.state.selectedIndex == 7 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:7})}}
                       title = "newfoundland and labrador" />
                    <Pei id = "pei" className = {this.state.selectedIndex == 8 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:8})}}
                      title = "prince edward island" />
                    <Bc id = "bc" className = {this.state.selectedIndex == 9 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:9})}}
                       title = "british columbia" />
                    <Nu id = "nu" className = {this.state.selectedIndex == 10 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:10})}}
                       title = "nunavut"/>
                    <Yk id = "yk" className = {this.state.selectedIndex == 11 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:11})}}
                       title = "yukon" />
                    <Nwt id = "nwt" className = {this.state.selectedIndex == 12 ? "province-selected":"province" } onClick={() => {this.setState({selectedIndex:12})}}
                        title = "northwest territories"/>
                </div>:
                
                    
                }
               
                 <div className = "province-info-container">
                {this.state.selectedIndex!=-1?
                    <div className = "per-province-info">
                    <div className = "header">
                        <div className = "province-name">
                            {this.state.provincialInfo[this.state.selectedIndex].name}
                        </div>
                        <div className = "info-container">
                            <div className = "flag-img-container" title = "provincial flag">
                                <img src={this.state.provincialInfo[this.state.selectedIndex].flag} ></img>
                            </div>
                            <div className = "population-container" title = "provincial population">
                                <div className = "pop-img-container">
                                    <img src={popu}></img>
                                </div>
                                
                                {this.state.provincialInfo[this.state.selectedIndex].pop}
                            </div>
                            <div className = "tax-info-container" >
                                <div className = "tax-img-container" title = "provincial sales tax">
                                    <img src={tax}></img>
                                </div>
                                {this.state.provincialInfo[this.state.selectedIndex].tax + "%"}
                                
                            </div>
                        </div>
                        
                          <div className= "amenities-container">
                         
                           <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.1/dist/leaflet.css" />
                                <MapContainer className = "map" center={[ this.state.provincialInfo[this.state.selectedIndex].cities[0].long, this.state.provincialInfo[this.state.selectedIndex].cities[0].lat]} zoom={9}
                                 attributionControl = {false} zoomControl = {false}>
                                    <TileLayer
                                        attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
                                        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                                    />
                                </MapContainer>
                                {this.state.isMapMenuExpanded ? 
                                    <div className = "expanded-on-map-menu">
                                      <div className = "map-menu"></div>
                                      <img src={up}></img>
                                    </div> :  <div className = "not-expanded-on-map-menu">
                                     <img src={down}></img>
                                </div>}
                               
                                {this.state.isMapFullScreen ? <div className = "fullscreen-map">
                                     <img src={ufs}></img>
                                </div>: <div className = "not-fullscreen-map">
                                    <img src={fs}></img>
                                </div>}
                                 <div className= "menu-options-container">
                                 {this.state.mapSideIcons.map((icon,i) => {
                                     if (i == this.state.selectedMenuIcon){
                                         return(
                                            
                                            <div className = "icon-container-selected" onClick = {(e) => this.changeMenu(e,i)}>
                                                <img src={icon} onMouseEnter =  {() =>{this.setState({currentMenuHover:i})}} onMouseLeave = {() => {this.setState({currentMenuHover:-1})}}></img>
                                            </div>
                                            
                                        )
                                    }else if(i == 6){
                                        if (this.state.hasAccount){
                                            return(
                                         <div className = "icon-container" >
                                            <img src={icon} onMouseEnter =  {() =>{this.setState({currentMenuHover:i})}} onMouseLeave = {() => {this.setState({currentMenuHover:-1})}}></img>
                                          </div>)
                                        }else{
                                            return(
                                              <div className = "icon-container-noAccnt" title = "log in or create account to access favorites">
                                            <img src={icon}></img>
                                          </div>)
                                        }
                                    }else{
                                        return(
                                         <div className = "icon-container" title = {this.state.sideIcons[i]} >
                                            <img src={icon} onClick = {(e) => this.changeMenu(e,i)} onMouseEnter =  {() =>{this.setState({currentMenuHover:i})}} onMouseLeave = {() => {this.setState({currentMenuHover:-1})
                                              
                                            }}></img>
                                    
                                        </div>)
                                       
                                        
                                         
                                        
                                    }
                                })}
                                   
                                
                               </div>
                               {  (this.state.currentMenuHover!= -1  && this.state.changeMenu) || this.state.selectedMenuIcon != -1?
                                            <div className = "menu-expanded-container-open">
                                                
                                            </div>
                            
                                :
                                            <div className = "menu-expanded-container-closed"></div>
                            }
                              
                        </div>
                        
                        
                        </div>
                        
                            
                        
                    </div>: 
                    <div className = "per-province-info">
                       
                    </div>
                   
                       
                }
                </div>
            </div>
        )
    }
}

export default InteractiveMap


 <div className = "province-info-container">
                {this.state.selectedIndex!=-1?
                    <div className = "per-province-info">
                    <div className = "header">
                        <div className = "province-name">
                            {this.state.provincialInfo[this.state.selectedIndex].name}
                        </div>
                        <div className = "info-container">
                            <div className = "flag-img-container" title = "provincial flag">
                                <img src={this.state.provincialInfo[this.state.selectedIndex].flag} ></img>
                            </div>
                            <div className = "population-container" title = "provincial population">
                                <div className = "pop-img-container">
                                    <img src={popu}></img>
                                </div>
                                
                                {this.state.provincialInfo[this.state.selectedIndex].pop}
                            </div>
                            <div className = "tax-info-container" >
                                <div className = "tax-img-container" title = "provincial sales tax">
                                    <img src={tax}></img>
                                </div>
                                {this.state.provincialInfo[this.state.selectedIndex].tax + "%"}
                                
                            </div>
                        </div>
                        
                          <div className= "amenities-container">
                         
                           <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.1/dist/leaflet.css" />
                                <MapContainer className = "map" center={[ this.state.provincialInfo[this.state.selectedIndex].cities[0].long, this.state.provincialInfo[this.state.selectedIndex].cities[0].lat]} zoom={9}
                                 attributionControl = {false} zoomControl = {false}>
                                    <TileLayer
                                        attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
                                        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                                    />
                                </MapContainer>
                                {this.state.isMapMenuExpanded ? 
                                    <div className = "expanded-on-map-menu">
                                      <div className = "map-menu"></div>
                                      <img src={up}></img>
                                    </div> :  <div className = "not-expanded-on-map-menu">
                                     <img src={down}></img>
                                </div>}
                               
                                {this.state.isMapFullScreen ? <div className = "fullscreen-map">
                                     <img src={ufs}></img>
                                </div>: <div className = "not-fullscreen-map">
                                    <img src={fs}></img>
                                </div>}
                                 <div className= "menu-options-container">
                                 {this.state.mapSideIcons.map((icon,i) => {
                                     if (i == this.state.selectedMenuIcon){
                                         return(
                                            
                                            <div className = "icon-container-selected" onClick = {(e) => this.changeMenu(e,i)}>
                                                <img src={icon} onMouseEnter =  {() =>{this.setState({currentMenuHover:i})}} onMouseLeave = {() => {this.setState({currentMenuHover:-1})}}></img>
                                            </div>
                                            
                                        )
                                    }else if(i == 6){
                                        if (this.state.hasAccount){
                                            return(
                                         <div className = "icon-container" >
                                            <img src={icon} onMouseEnter =  {() =>{this.setState({currentMenuHover:i})}} onMouseLeave = {() => {this.setState({currentMenuHover:-1})}}></img>
                                          </div>)
                                        }else{
                                            return(
                                              <div className = "icon-container-noAccnt" title = "log in or create account to access favorites">
                                            <img src={icon}></img>
                                          </div>)
                                        }
                                    }else{
                                        return(
                                         <div className = "icon-container" title = {this.state.sideIcons[i]} >
                                            <img src={icon} onClick = {(e) => this.changeMenu(e,i)} onMouseEnter =  {() =>{this.setState({currentMenuHover:i})}} onMouseLeave = {() => {this.setState({currentMenuHover:-1})
                                              
                                            }}></img>
                                    
                                        </div>)
                                       
                                        
                                         
                                        
                                    }
                                })}
                                   
                                
                               </div>
                               {  (this.state.currentMenuHover!= -1  && this.state.changeMenu) || this.state.selectedMenuIcon != -1?
                                            <div className = "menu-expanded-container-open">
                                                
                                            </div>
                            
                                :
                                            <div className = "menu-expanded-container-closed"></div>
                            }
                              
                        </div>
                        
                        
                        </div>
                        
                            
                        
                    </div>: 
                    <div className = "per-province-info">
                       
                    </div>
                   
                       
                }
                </div>
                
                
                

.province-info-container{
    position:relative;
    width:40%;
    height:100%;
    background:transparent;
}
.header{
    position:relative;
    left: -50px;
    width:calc(100%);
    height:100%;
    background:transparent;
}
.province-name{
    position:relative;
    width:860px;
    height:auto;
    left:-180px;
    text-align:center;
    text-transform: uppercase;
    font-family: serif;
    font-size: 40px;
    letter-spacing: 10px;
    animation: fadeIn 0.2s;
    background: transparent;
}
.info-container{
    position:relative;
    top:15px;
    left: -170px;
    width:100%;
    height:auto;
    background:transparent;
    
}
.flag-img-container{
    position:relative;
    top:-2px;
    left:10px;
    width:150px;
    height:75px;
    background:transparent;
}
.flag-img-container img{
    width:100%;
    height:100%;
    animation: fadeIn 0.2s;
    border-radius:10px;
    
}
.per-province-info{
    position:relative;
    width:100%;
    height:100%;
}

.population-container{
    position:relative;
    width:70px;
     height:70px;
    top:15px;
    background:transparent;
    text-align:left;
    display:flex;
  font-family: "PT Sans", Calibri, Tahoma, sans-serif;
    font-size: 15px;
    letter-spacing: 6px;
    animation: fadeIn 0.2s;
}
.pop-img-container{
    position:relative;
    width:100%;
    height:100%;
}
.population-container img{
    top: -8px;
    position:relative;
    height:40px;
    width:40px;
   
}
.tax-info-container{
    position:relative;
    background:transparent;
    width:100%;
    height:50px;
    display:flex;
     font-family: "PT Sans", Calibri, Tahoma, sans-serif;
    font-size: 15px;
    letter-spacing: 6px;
    animation: fadeIn 0.2s;
}
.tax-img-container{
    position:relative;
    width:50px;
    height:50px;
    left:5px;
}
.tax-img-container img{
    position:relative;
    width:60%;
    height:60%;
}
.amenities-container{
    position:absolute;
    top:60px;
    width:720px;
    height:90%;
    background:transparent;
    border-radius: 10px;
    display:flex;
}
.map{
    position:relative;
    width:100%;
    height:100%;
    border-radius:10px;
    border:1px solid black;
}
.on-map-city-info{
    position:absolute;
    width:30%;
    height:30%;
    background:white;
    opacity:50%;
    z-index:1000;
    border-radius:10px;
    border: 1px solid black;
}
.menu-options-container{
    position:relative;
    width:75px;
    height:100%;
    background:transparent;
    
}
.icon-container-selected{
     position:relative;
    left:-45px;
    top:-60px;
    margin-top:60px;
    width:40px;
    height:40px;
    border-radius:50%;
    background:black;
    overflow:hidden;
    transition: transform 0.5s;
    
}
.icon-container-selected img{
    position:relative;
    top:5px;
    left: 5px;
    width:30px;
    height:30px;
    -webkit-filter: invert(1);
    filter: invert(1);

    
}
.icon-container{
    position:relative;
    left:-45px;
    top:-60px;
    margin-top:60px;
    width:40px;
    height:40px;
    border-radius:50%;
    background:white;
    overflow:hidden;
    transition: transform 0.5s;
}

.icon-container-noAccnt{
    position:relative;
    left:-45px;
    top:-60px;
    margin-top:60px;
    width:40px;
    height:40px;
    border-radius:50%;
    background:white;
    overflow:hidden;
    transition: transform 0.5s;
    opacity:50%;
}
.icon-container-noAccnt img{
    position:relative;
    top:5px;
    left: 5px;
    width:30px;
    height:30px;
    
}
.icon-container:hover::after{
    top:-70px;
    
}
.icon-container:hover{
    transform: translateY(-5px);
    background:black;
}
.icon-container img{
    position:relative;
    top:5px;
    left: 5px;
    width:30px;
    height:30px;
    transition: filter 0.5s;
}

.icon-container:hover img{
   -webkit-filter: invert(1);
    filter: invert(1);

}

.expanded-on-map-menu{
    
    
}

.not-expanded-on-map-menu{
    position:relative;
    left:-600px;
    width:30px;
    height:30px;
    z-index:1000;
    
}


.not-expanded-on-map-menu img{
    position:relative;
    width:100%;
    height:100%;
    opacity:60%;
    
}
.not-expanded-on-map-menu:hover img{
    position:relative;
    width:100%;
    height:100%;
    opacity:100%
    
}
.fullscreen-map{
    
}
.not-fullscreen-map{
    position:relative;
    left:-60px;
    top:620px;
    width:30px;
    height:30px;
    background:transparent;
    z-index:1000;
    
}
.not-fullscreen-map img{
    position:relative;
    
    width:100%;
    height:100%;
     opacity:60%;
    
}

.not-fullscreen-map:hover img{
    position:relative;
    
    width:100%;
    height:100%;
     opacity:100%;
    
}
.menu-expanded-container-open{
    position:absolute;
    top:1px;
    right:115px;
    width:300px;
    height:100%;
    border-radius:10px;
    background:white;
    opacity:80%;
    z-index:2000;
   transition:width ease-in 0.3s;
}

.menu-expanded-container-closed{
    position:absolute;
    top:1px;
    right:115px;
    width:0px;
    height:100%;
    border-radius:10px;
    background:white;
    opacity:80%;
    z-index:2000;
   transition:width ease-out 0.3s;
}
